{"version":3,"sources":["webpack://stardew-mtl/./src/sass/index.sass?09d5","webpack://stardew-mtl/./src/js/map.js","webpack://stardew-mtl/./src/js/markers.js","webpack://stardew-mtl/./src/js/recenter.js","webpack://stardew-mtl/./src/js/clock/control.js","webpack://stardew-mtl/./src/js/clock/content.js","webpack://stardew-mtl/webpack/bootstrap","webpack://stardew-mtl/webpack/runtime/define property getters","webpack://stardew-mtl/webpack/runtime/hasOwnProperty shorthand","webpack://stardew-mtl/webpack/runtime/make namespace object","webpack://stardew-mtl/./src/js/index.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;ACAoC;AACE;;;AAGtC;;AAEA;AACA,EAAE,yCAAyC,oBAAoB,GAAG;AAClE,EAAE,4CAA4C,oBAAoB,GAAG;AACrE,EAAE,8CAA8C,oBAAoB,GAAG;AACvE,EAAE,oDAAoD,oBAAoB,GAAG;;AAE7E,EAAE,uCAAuC,QAAQ,2DAAc,EAAE,GAAG;AACpE,EAAE,4CAA4C,QAAQ,oDAAU,EAAE,GAAG;AACrE,EAAE,yCAAyC,QAAQ,oDAAU,EAAE,GAAG;AAClE,EAAE,uCAAuC,QAAQ,uDAAa,EAAE,GAAG;AACnE,EAAE,2CAA2C,QAAQ,4DAAe,EAAE,GAAG;AACzE,EAAE,+CAA+C,QAAQ,mDAAS,EAAE,GAAG;AACvE,EAAE,8CAA8C,QAAQ,8DAAiB,EAAE,GAAG;AAC9E,EAAE,2DAA2D,QAAQ,mDAAS,EAAE,GAAG;AACnF,EAAE,sDAAsD,QAAQ,uDAAa,EAAE,GAAG;AAClF;;AAEO,kBAAkB,wDAAkB;;AAE3C;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEO;AACQ;AACf;AACA,E;;;;;;;;;;;;;ACtC4B;AACY;;;AAGxC;;AAEA;AACA;AACA,WAAW,IAAI,EAAE,OAAO;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,sCAAsC,+CAAI;;AAEjD;;AAEA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA,eAAe,+CAAI;AACnB,CAAC,uDAAY;AACb;AACA,gBAAgB,qCAAG;AACnB;AACA,EAAE;AACF;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB,qCAAG;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;;;AAGA;;AAEe;AACf;AACA;AACA,E;;;;;;;;;;;;;;;;;;ACxGuC;AACD;;;AAGtC;;AAEA;;AAEA,wBAAwB,wDAAkB;AAC1C;AACA;;AAEA;AACA,0BAA0B,+CAAa,CAAC,2CAAS;AACjD;;;AAGA;;AAEA;AACA;AACA;AACA,CAAC,8CAAY;AACb;;AAEA;AACA,4CAA4C,2CAAS;;AAErD;AACA;AACA,oBAAoB,+CAAa;AACjC;AACA;AACA;;;AAGA;;AAEe;AACf;AACA,CAAC,iDAAe;AAChB,C;;;;;;;;;;;;;;;;;;ACzC6B;AACM;;AAE5B;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC,8CAAY;AACb;;AAEe;AACf;AACA,CAAC,iDAAU;AACX,C;;;;;;;;;;;AC3DmE;;AAEnE;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC,sDAAgB,MAAM,QAAQ,IAAI,KAAK;AACxC;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,OAAO;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC,uDAAiB,MAAM,MAAM,GAAG,QAAQ;AACzC;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO,EAAE,OAAO;AACjC,CAAC,4DAAsB;AACvB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO,EAAE,QAAQ;AAClC,CAAC,6DAAuB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;UC3JA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;ACNA;;AAE4B;AACQ;;AAEpC;AACA;AACA,wDAAwD,KAAK;AAC7D;AACA;AACA,WAAW,8CAAC;;;AAGZ;;AAE4B;AACQ;AACE;AACE;AACxC,6CAAO;AACP,iDAAW;AACX,kDAAY;AACZ,uDAAS,G","file":"index.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import $ from '../data/colors.json';\r\nimport { busMarker } from './markers';\r\n\r\n\r\n// map options\r\n\r\nconst styles = [\r\n\t{ elementType: 'labels',\t\t\t\t\t\t\tstylers: [{ visibility: 'off' }] },\r\n\t{ featureType: 'road.local',\t\t\t\t\t\tstylers: [{ visibility: \"off\" }] },\r\n\t{ featureType: 'transit.line',\t\t\t\t\t\tstylers: [{ visibility: 'off' }] },\r\n\t{ featureType: 'transit.station.rail',\t\t\t\tstylers: [{ visibility: 'off' }] },\r\n\r\n\t{ featureType: 'all',\t\t\t\t\t\t\t\tstylers: [{ color: $[\"soil-dark\"] }] },\r\n\t{ featureType: 'landscape',\t\t\t\t\t\t\tstylers: [{ color: $[\"grass\"] }] },\r\n\t{ featureType: 'water',\t\t\t\t\t\t\t\tstylers: [{ color: $[\"water\"] }] },\r\n\t{ featureType: 'poi',\t\t\t\t\t\t\t\tstylers: [{ color: $[\"pavement\"] }] },\r\n\t{ featureType: 'poi.park',\t\t\t\t\t\t\tstylers: [{ color: $[\"grass-dark\"] }] },\r\n\t{ featureType: 'road.arterial',\t\t\t\t\t\tstylers: [{ color: $[\"soil\"] }] },\r\n\t{ featureType: 'road.highway',\t\t\t\t\t\tstylers: [{ color: $[\"road-marking\"] }] },\r\n\t{ featureType: 'road.highway.controlled_access',\tstylers: [{ color: $[\"road\"] }] },\r\n\t{ featureType: 'transit.station.airport',\t\t\tstylers: [{ color: $[\"pavement\"] }] },\r\n];\r\n\r\nexport const mapCenter = busMarker.position;\r\n\r\nconst mapOptions = {\r\n\tcenter: mapCenter,\r\n\tzoom: 14,\r\n\tdisableDefaultUI: true,\r\n\tstyles: styles\r\n};\r\n\r\n\r\n// initialize\r\n\r\nexport let map;\r\nexport default function initMap() {\r\n\tmap = new google.maps.Map(document.getElementById('map'), mapOptions);\r\n};","import { map } from './map';\r\nimport data from '../data/markers.json';\r\n\r\n\r\n// FORMAT DATA\r\n\r\nfunction getIconUrl(iconFn) {\r\n\tconst dir = './assets/';\r\n\treturn `${dir}${iconFn}.png`;\r\n}\r\n\r\nfunction scaleBus(pngWidth, pngHeight) {\r\n\treturn {\r\n\t\twidth: pngWidth / 6,\r\n\t\theight: pngHeight / 6\r\n\t}\r\n}\r\n\r\nfunction scaleIcon(pngWidth, pngHeight) {\r\n\tconst defaultHeight = 90;\r\n\treturn {\r\n\t\twidth: pngWidth / pngHeight * defaultHeight,\r\n\t\theight: defaultHeight\r\n\t}\r\n}\r\n\r\n// starting point\r\n\r\nfunction formatStartingPoint(dataArr) {\r\n\tconst starter = dataArr[0];\r\n\tstarter.icon = {\r\n\t\turl: getIconUrl(starter.icon.fn),\r\n\t\tscaledSize: scaleBus(starter.icon.width, starter.icon.height)\r\n\t};\r\n\tstarter.optimized = false;\r\n\treturn starter;\r\n}\r\n\r\nexport const busMarker = formatStartingPoint(data);\r\n\r\n// all markers\r\n\r\nfunction formatMarkers(dataArr) {\r\n\tfor (let i = 1; i < dataArr.length; i++) {\r\n\t\tconst marker = dataArr[i];\r\n\t\tmarker.icon = {\r\n\t\t\turl: getIconUrl(marker.icon.fn),\r\n\t\t\tscaledSize: scaleIcon(marker.icon.width, marker.icon.height)\r\n\t\t};\r\n\t\tmarker.optimized = false;\r\n\t}\r\n\treturn dataArr;\r\n}\r\n\r\n\r\n// CREATE MARKERS\r\n\r\nlet markers = [];\r\n\r\n// data array => marker obj\r\nfunction generateMarkers() {\r\n\tformatMarkers(data);\r\n\tdata.forEach(obj => {\r\n\t\tconst marker = new google.maps.Marker(obj);\r\n\t\tmarker.setMap(map);\r\n\t\tmarkers.push(marker);\r\n\t});\r\n}\r\n\r\n\r\n// INFOWINDOW\r\n\r\nconst infowindow = new google.maps.InfoWindow();\r\n\r\n// actions on click\r\nconst openInfo = currMarker => {\r\n\tinfowindow.setContent(currMarker.title);\r\n\tinfowindow.open(map, currMarker);\r\n}\r\nconst closeInfo = () => {\r\n\tinfowindow.close();\r\n\tinfowindow.setContent(\"\");\r\n}\r\n\r\n// swap content depending on marker\r\nfunction setContent(currMarker) {\r\n\tinfowindow.getContent() !== currMarker.title\r\n\t\t? openInfo(currMarker)\r\n\t\t: closeInfo();\r\n}\r\n\r\n// event listeners\r\nfunction initInfoWindow() {\r\n\tmarkers.forEach(marker => {\r\n\t\tmarker.addListener('click', () => setContent(marker));\r\n\t});\r\n}\r\n\r\n\r\n// INITIALIZE\r\n\r\nexport default function initMarkers() {\r\n\tgenerateMarkers();\r\n\tinitInfoWindow();\r\n};","import { map, mapCenter } from './map';\r\nimport { busMarker } from './markers';\r\n\r\n\r\n// HTML ELEMENT\r\n\r\nconst img = document.createElement('img');\r\n\r\nimg.setAttribute('src', busMarker.icon.url);\r\nimg.className = 'map-ctrl recenter i'\r\nimg.hidden = true;\r\n\r\n// functionality\r\nconst handleClick = () => map.setCenter(mapCenter);\r\nimg.addEventListener('click', handleClick);\r\n\r\n\r\n// GENERATE CONTROL\r\n\r\nfunction createControl() {\r\n\tconst div = document.createElement('div');\r\n\tdiv.appendChild(img);\r\n\tmap.controls[google.maps.ControlPosition.LEFT_TOP].push(div);\r\n}\r\n\r\n// mapCenter coordinates => LatLng obj\r\nconst centerLatLng = new google.maps.LatLng(mapCenter);\r\n\r\n// toggle hidden attr if mapCenter is out of current bounds\r\nfunction handleChange() {\r\n\tconst currBounds = map.getBounds();\r\n\tconst isCenterInBounds = currBounds.contains(centerLatLng);\r\n\timg.hidden = isCenterInBounds;\r\n}\r\n\r\n\r\n// INTIALIZE\r\n\r\nexport default function initRecenter() {\r\n\tcreateControl();\r\n\tmap.addListener('center_changed', handleChange);\r\n}","import { map } from '../map';\r\nimport setContent from './content';\r\n\r\nexport let\r\n\tinnerDiv,\r\n\tdayDiv,\r\n\ttimeDiv,\r\n\ticonsDiv,\r\n\tweatherImg,\r\n\tseasonImg;\r\n\r\nfunction createElements() {\r\n\tinnerDiv\t= document.createElement('div'),\r\n\tdayDiv\t\t= document.createElement('div'),\r\n\ticonsDiv\t= document.createElement('div'),\r\n\ttimeDiv\t\t= document.createElement('div'),\r\n\tweatherImg\t= document.createElement('img'),\r\n\tseasonImg\t= document.createElement('img');\r\n}\r\n\r\nfunction setClasses() {\r\n\tinnerDiv.className\t\t= 'map-ctrl clock';\r\n\tdayDiv.className\t\t= 'clock-day';\r\n\ttimeDiv.className\t\t= 'clock-time';\r\n\ticonsDiv.className\t\t= 'clock-i';\r\n\tweatherImg.className\t= 'i-weather';\r\n\tseasonImg.className\t\t= 'i-season';\r\n}\r\n\r\nfunction appendElements() {\r\n\ticonsDiv.appendChild(weatherImg);\r\n\ticonsDiv.appendChild(seasonImg);\r\n\r\n\tinnerDiv.appendChild(dayDiv);\r\n\tinnerDiv.appendChild(iconsDiv);\r\n\tinnerDiv.appendChild(timeDiv);\r\n}\r\n\r\nfunction initInnerElements() {\r\n\tcreateElements();\r\n\tsetClasses();\r\n\tappendElements();\r\n}\r\n\r\nfunction initOuterDiv() {\r\n\tconst outerDiv = document.createElement('div');\r\n\touterDiv.appendChild(innerDiv);\r\n\treturn outerDiv;\r\n}\r\n\r\nfunction initMapControl() {\r\n\tinitInnerElements();\r\n\tconst outerDiv = initOuterDiv();\r\n\tmap.controls[google.maps.ControlPosition.RIGHT_TOP].push(outerDiv);\r\n}\r\n\r\nexport default function initClock() {\r\n\tinitMapControl();\r\n\tsetContent();\r\n}","import { dayDiv, timeDiv, seasonImg, weatherImg } from './control';\r\n\r\nlet data;\r\nfunction loadData() {\r\n\tdata = new Date();\r\n}\r\n\r\n\r\n// Day div content - Day. DD\r\n\r\nfunction getWeekDay() {\r\n\tconst arr = [\r\n\t\t'sun', 'mon', 'tue', 'thu', 'wed', 'fri', 'sat'\r\n\t];\r\n\tconst int = data.getDay();\r\n\treturn arr[int];\r\n}\r\n\r\n// Capitalize first letter\r\nconst formatWeekDay = str => str.charAt(0).toUpperCase() + str.slice(1);\r\n\r\nlet date;\r\nfunction setDay() {\r\n\tdate = data.getDate();\r\n\tconst weekdayStr = getWeekDay();\r\n\tconst weekday = formatWeekDay(weekdayStr);\r\n\r\n\tdayDiv.innerHTML = `${weekday}. ${date}`;\r\n}\r\n\r\n\r\n// Time div - (H)H:MM\r\n\r\nfunction getMinutes() {\r\n\tlet minInt = data.getMinutes();\r\n\t// format minutes as always :MM\r\n\treturn minInt < 10\r\n\t\t? `0${minInt}`\r\n\t\t: minInt;\r\n}\r\n\r\nlet hours,\r\n\tminutes;\r\nfunction getTime() {\r\n\thours\t= data.getHours();\r\n\tminutes\t= getMinutes();\r\n}\r\n\r\nfunction setTime() {\r\n\tgetTime();\r\n\ttimeDiv.innerHTML = `${hours}:${minutes}`;\r\n}\r\n\r\n\r\n// Update time\r\n\r\nfunction handleTimeUpdate() {\r\n\tloadData();\r\n\tsetTime();\r\n}\r\n\r\nconst updateInterval = 30000;\r\nfunction updateTime() {\r\n\tsetInterval(handleTimeUpdate, updateInterval);\r\n}\r\n\r\n\r\n// Images\r\nconst pngDir = './assets/';\r\n\r\n// Season image\r\n\r\nlet season;\r\nfunction getSeason() {\r\n\tconst month = data.getMonth();\r\n\tconst arr = [ 'winter', 'spring', 'summer', 'fall' ];\r\n\r\n\tswitch (month) {\r\n\t\tcase 11:\t//dec\r\n\t\tcase 0:\t\t//jan\r\n\t\tcase 1:\t\t//feb\r\n\t\t\treturn season = arr[0];\r\n\t\r\n\t\tcase 2:\t\t//mar\r\n\t\tcase 3:\t\t//apr\r\n\t\tcase 4:\t\t//may\r\n\t\t\treturn season = arr[1];\r\n\t\r\n\t\tcase 5:\t\t//jun\r\n\t\tcase 6:\t\t//jul\r\n\t\tcase 7:\t\t//aug\r\n\t\t\treturn season = arr[2];\r\n\r\n\t\tcase 8:\t\t//sep\r\n\t\tcase 9:\t\t//oct\r\n\t\tcase 10:\t//nov\r\n\t\t\treturn season = arr[3];\r\n\t}\r\n}\r\n\r\nfunction setSeasonIcon() {\r\n\tconst icon = `${pngDir}${season}.png`;\r\n\tseasonImg.setAttribute('src', icon);\r\n};\r\n\r\nfunction setSeason() {\r\n\tgetSeason();\r\n\tsetSeasonIcon();\r\n}\r\n\r\n// Weather image\r\n\r\nlet weatherTypes = [\r\n\t'sun',\r\n\t'rain', // absent on winter\r\n\t'storm' // absent on winter\r\n]\r\n\r\nfunction getWinterWeather() {\r\n\tif (season === 'winter') {\r\n\t\t// remove storm\r\n\t\tweatherTypes.pop();\r\n\t\t// replace rain with snow\r\n\t\tweatherTypes[1] = 'snow';\r\n\t}\r\n}\r\n\r\nfunction getWeather() {\r\n\tconst i = Math.floor(Math.random() * weatherTypes.length);\r\n\treturn weatherTypes[i];\r\n}\r\n\r\nfunction setWeatherIcon(weather) {\r\n\tconst icon = `${pngDir}${weather}.png`;\r\n\tweatherImg.setAttribute('src', icon);\r\n};\r\n\r\nfunction setWeather() {\r\n\t// check if winter\r\n\tgetWinterWeather();\r\n\t// set weather\r\n\tconst weather = getWeather();\r\n\tsetWeatherIcon(weather);\r\n}\r\n\r\n\r\n// Initialize all content\r\n\r\nexport default function setContent() {\r\n\tloadData();\r\n\tsetDay();\r\n\tsetTime();\r\n\tupdateTime();\r\n\tsetSeason();\r\n\tsetWeather();\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Styles\r\n\r\nimport '../sass/index.sass';\r\nimport $ from '../data/colors.json';\r\n\r\nfunction setCSSvars(data) {\r\n\tfor (const [name, hex] of Object.entries(data)) {\r\n\t\tdocument.documentElement.style.setProperty(`--color-${name}`, hex);\r\n\t}\r\n}\r\nsetCSSvars($);\r\n\r\n\r\n// Map\r\n\r\nimport initMap from './map';\r\nimport initMarkers from './markers';\r\nimport initRecenter from './recenter';\r\nimport initClock from './clock/control';\r\ninitMap();\r\ninitMarkers();\r\ninitRecenter();\r\ninitClock();"],"sourceRoot":""}